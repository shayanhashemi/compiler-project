import moo from "moo";

export const lexer = moo.states({
  main: {
    comment: /<%(?:[^%]|%[^>])*%>/,
    number: { match: /0|[+-]?[1-9][0-9]*|[1-9][0-9]*/ },
    string: {
      match: /"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/,
      value: (x) => x.slice(1, -1),
    },
    identifier: {
      match: /[a-zA-Z_][a-zA-Z_0-9]*/,
      type: moo.keywords({
        keyword: [
          "fn",
          "as",
          "vector",
          "int",
          "str",
          "null",
          "return",
          "for",
          "while",
          "do",
          "to",
          "begin",
          "end",
          "if",
        ],
      }),
    },
    lparen: "(",
    rparen: ")",
    lbrace: "{",
    rbrace: "}",
    doubleLBracket: "[[",
    doubleRBracket: "]]",
    lbracket: "[",
    rbracket: "]",
    doubleColon: "::",
    colon: ":",
    semicolon: ";",
    comma: ",",
    equality: "==",
    notEqual: "!=",
    greaterThanEqual: ">=",
    lessThanEqual: "<=",
    lessThan: "<",
    greaterThan: ">",
    assignment: "=",
    not: "!",
    arithmetic: ["+", "-", "*", "/"],
    ws: { match: /[ \t\r\n]+/, lineBreaks: true },
  },
});
